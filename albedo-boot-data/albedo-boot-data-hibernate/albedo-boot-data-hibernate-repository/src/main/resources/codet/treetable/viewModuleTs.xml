<?xml version="1.0" encoding="utf-8"?>
<template>
    <name>viewList</name>
    <filePath>src/main/webapp/app/theme/pages/${lastPackageName}/${moduleName}/${subModuleName}/${className}</filePath>
    <fileName>${className}.module.ts</fileName>
    <content><![CDATA[
import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';
import {CommonModule} from '@angular/common';
import {RouterModule} from "@angular/router";
import {${ClassName}Component} from "./${className}.component";
import {routeChilds} from "../../../../api.routing.module";
import {AlbedoBootSharedModule} from "../../../../../shared/shared.module";
import {LayoutModule} from "../../../../layouts/layout.module";
import {${ClassName}Service} from "./service/${className}.service";
import {${ClassName}FormComponent} from "./${className}.form.component";

const routes${moduleName?cap_first}${ClassName} = [
    {
        path: "${urlPrefix}/list",
        component: ${ClassName}Component
    },
    <#if !scheme.modalView>{
        path: "${urlPrefix}/form",
        component: ${ClassName}FormComponent
    },
    {
        path: "${urlPrefix}/form/:id",
        component: ${ClassName}FormComponent
    },</#if>
];

routeChilds.push(...routes${moduleName?cap_first}${ClassName})


@NgModule({
    imports: [
        AlbedoBootSharedModule,
        CommonModule,
        RouterModule,
        LayoutModule
    ], exports: [
        ${ClassName}Component,
    ], entryComponents: [
        ${ClassName}Component,
    ], declarations: [
        ${ClassName}Component,
        <#if !scheme.modalView>${ClassName}FormComponent,</#if>
    ], providers: [
        ${ClassName}Service,
    ],
    schemas: [CUSTOM_ELEMENTS_SCHEMA]
})
export class ${ClassName}Module {


}

]]>
    </content>
</template>
